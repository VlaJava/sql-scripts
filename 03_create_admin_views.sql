USE DB_VIAJAVA
GO

-- DASHBOARD VIEWS CREATION

-- GENERAL METRICS VIEW
CREATE VIEW vw_general_metrics AS 
SELECT 
    U.ACTIVE_CLIENTS,
    R.CONFIRMED_BOOKINGS,
    R.TOTAL_REVENUE,
    A.AVG_RATINGS,
    P.AVAILABLE_PACKAGES
FROM
    (SELECT COUNT(*) AS ACTIVE_CLIENTS FROM TB_USERS WHERE ACTIVE = 1) U
CROSS JOIN
    (SELECT COUNT(*) AS CONFIRMED_BOOKINGS, SUM(TOTAL_PRICE) AS TOTAL_REVENUE FROM TB_BOOKINGS WHERE BOOKING_STATUS = 'CONFIRMED') R
CROSS JOIN
    (SELECT AVG(RATING) AS AVG_RATINGS FROM TB_REVIEWS) A
CROSS JOIN
    (SELECT COUNT(*) AS AVAILABLE_PACKAGES FROM TB_PACKAGES WHERE AVAILABLE = 1) P
GO

-- MONTHLY REVENUE VIEW
CREATE VIEW vw_monthly_revenue AS
SELECT 
  YEAR(BOOKING_DATE) AS YEAR,
  MONTH(BOOKING_DATE) AS MONTH,
  COUNT(ID) AS BOOKING_COUNT,
  SUM(TOTAL_PRICE) AS REVENUE
FROM TB_BOOKINGS
WHERE BOOKING_STATUS = 'CONFIRMED'
GROUP BY YEAR(BOOKING_DATE), MONTH(BOOKING_DATE)
GO

-- MOST POPULAR DESTINATIONS VIEW
CREATE VIEW vw_popular_destinations AS 
SELECT P.DESTINATION, COUNT(R.ID) AS BOOKINGS,
       SUM(R.TOTAL_PRICE) AS REVENUE
FROM TB_PACKAGES P
JOIN TB_BOOKINGS R ON P.ID = R.PACKAGE_ID
WHERE R.BOOKING_STATUS = 'CONFIRMED'
GROUP BY P.DESTINATION
GO

-- Clientes com reservas pendentes de pagamento
CREATE VIEW vw_pending_booking_clients AS
SELECT U.NAME, U.EMAIL, U.PHONE,
       R.ID AS BOOKING_ID, R.TOTAL_PRICE,
       (R.TOTAL_PRICE - ISNULL(SUM(P.AMOUNT), 0)) AS SALDO_DEVEDOR
FROM TB_USERS U
JOIN TB_BOOKINGS R ON U.ID = R.USER_ID
LEFT JOIN TB_PAYMENTS P ON R.ID = P.BOOKING_ID AND P.PAYMENT_STATUS = 'APPROVED'
WHERE R.BOOKING_STATUS = 'PENDING'
GROUP BY U.NAME, U.EMAIL, U.PHONE, R.ID, R.TOTAL_PRICE
HAVING (R.TOTAL_PRICE - ISNULL(SUM(P.AMOUNT), 0) > 0)
ORDER BY SALDO_DEVEDOR DESC;

GO