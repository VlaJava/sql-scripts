USE DB_VIAJAVA
GO

-- LISTA OS USURIOS COM SUAS RESPECTIVAS ROLES.

SELECT * FROM TB_USERS;
SELECT * FROM TB_ROLES;

SELECT	
	U.NAME AS NAME,
	U.EMAIL AS EMAIL,
	U.ACTIVE AS ACTIVE,
	RL.ROLE AS [USER ROLE]
FROM 
	TB_USERS U LEFT JOIN TB_ROLES RL 
ON  U.ID = RL.USER_ID
GROUP BY NAME, EMAIL, ACTIVE, RL.ROLE;

GO

-- Lista todos os usurios ativos
SELECT ID, NAME, EMAIL, PHONE 
FROM TB_USERS 
WHERE ACTIVE = 1
ORDER BY NAME;

GO

-- Pacotes disponveis ordenados por valor
SELECT ID, TITLE, SOURCE, DESTINATION, PRICE, START_DATE, END_DATE
FROM TB_PACKAGES
WHERE AVAILABLE = 1 AND START_DATE > GETDATE()
ORDER BY PRICE;

GO

-- Reservas confirmadas
SELECT R.ID, U.NAME AS CLIENT, P.TITLE AS PACKAGE, 
       R.TOTAL_PRICE, R.TRAVEL_DATE, R.BOOKING_STATUS
FROM TB_BOOKINGS R
JOIN TB_USERS U ON R.USER_ID = U.ID
JOIN TB_PACKAGES P ON R.PACKAGE_ID = P.ID
WHERE R.BOOKING_STATUS = 'CONFIRMED'
ORDER BY R.TRAVEL_DATE;

GO
-----------------------------------------------------------------

-- Total de vendas por pacote
SELECT P.TITLE, COUNT(R.ID) AS [QUANTIDADE BOOKINGS], 
       SUM(R.TOTAL_PRICE) AS TOTAL_VENDIDO
FROM TB_PACKAGES P
LEFT JOIN TB_BOOKINGS R ON P.ID = R.PACKAGE_ID
GROUP BY P.TITLE
ORDER BY TOTAL_VENDIDO DESC;

GO

-- Mdia de avaliações por pacote
SELECT P.TITLE, AVG(A.RATING) AS AVERAGE_RATING, 
       COUNT(A.ID) AS QUANTIDADE_REVIEWS
FROM TB_PACKAGES P
LEFT JOIN TB_REVIEWS A ON P.ID = A.BOOKING_ID
GROUP BY P.TITLE
ORDER BY AVERAGE_RATING DESC;

GO

-- Pagamentos por mtodo
SELECT METHOD, COUNT(ID) AS QUANTIDADE, 
       SUM(AMOUNT) AS TOTAL_RECEBIDO,
       AVG(AMOUNT) AS MEDIA_PAGAMENTO
FROM TB_PAYMENTS
WHERE PAYMENT_STATUS = 'APPROVED'
GROUP BY METHOD
ORDER BY TOTAL_RECEBIDO DESC;

GO
-------------------------
-- Pacotes mais populares (com mais reservas)
SELECT TOP 5 P.TITLE, COUNT(R.ID) AS TOTAL_BOOKINGS
FROM TB_PACKAGES P
JOIN TB_BOOKINGS R ON P.ID = R.PACKAGE_ID
GROUP BY P.TITLE
ORDER BY TOTAL_BOOKINGS DESC;

GO
-- Clientes que mais gastaram
SELECT TOP 10 U.NAME, U.EMAIL, 
       COUNT(R.ID) AS BOOKING_COUNT,
       SUM(R.TOTAL_PRICE) AS TOTAL_GASTO
FROM TB_USERS U
JOIN TB_BOOKINGS R ON U.ID = R.USER_ID
GROUP BY U.NAME, U.EMAIL
ORDER BY TOTAL_GASTO DESC;

GO
-- Ocupao dos pacotes (reservas vs limite)
SELECT P.TITLE, P.TRAVELER_LIMIT,
       COUNT(V.ID) AS TRAVELERS_CONFIRMADOS,
       (P.TRAVELER_LIMIT - COUNT(V.ID)) AS VAGAS_RESTANTES
FROM TB_PACKAGES P
JOIN TB_BOOKINGS R ON P.ID = R.PACKAGE_ID
JOIN TB_TRAVELERS V ON R.ID = V.BOOKING_ID
WHERE R.BOOKING_STATUS = 'CONFIRMADO'
GROUP BY P.TITLE, P.TRAVELER_LIMIT
ORDER BY VAGAS_RESTANTES;

GO

---------------------------------

-- Pacotes com avaliao abaixo da mdia
SELECT P.TITLE, AVG(A.RATING) AS MEDIA_AVALIACAO
FROM TB_PACKAGES P
JOIN TB_REVIEWS A ON P.ID = A.BOOKING_ID
GROUP BY P.TITLE
HAVING AVG(A.RATING) < (SELECT AVG(RATING) FROM TB_REVIEWS)
ORDER BY MEDIA_AVALIACAO;

-- Clientes com reservas pendentes de pagamento
SELECT U.NAME, U.EMAIL, U.PHONE,
       R.ID AS BOOKING_ID, R.TOTAL_PRICE,
       (R.TOTAL_PRICE - ISNULL(SUM(P.AMOUNT), 0)) AS SALDO_DEVEDOR
FROM TB_USERS U
JOIN TB_BOOKINGS R ON U.ID = R.USER_ID
LEFT JOIN TB_PAYMENTS P ON R.ID = P.BOOKING_ID AND P.PAYMENT_STATUS = 'APPROVED'
WHERE R.BOOKING_STATUS = 'PENDING'
GROUP BY U.NAME, U.EMAIL, U.PHONE, R.ID, R.TOTAL_PRICE
HAVING (R.TOTAL_PRICE - ISNULL(SUM(P.AMOUNT), 0) > 0)
ORDER BY SALDO_DEVEDOR DESC;

-- Pacotes com melhor custo-benefcio (maior nota / menor preo)
SELECT P.TITLE, P.PRICE, AVG(A.RATING) AS MEDIA_AVALIACAO,
       (AVG(A.RATING)/P.PRICE) AS CUSTO_BENEFICIO
FROM TB_PACKAGES P
JOIN TB_BOOKINGS RS ON P.ID = RS.ID
JOIN TB_REVIEWS A ON RS.ID = A.BOOKING_ID
GROUP BY P.TITLE, P.PRICE
ORDER BY CUSTO_BENEFICIO DESC;


GO


----------------------------

-- Mtricas gerais para dashboard
SELECT 
  (SELECT COUNT(*) FROM TB_USERS WHERE ACTIVE = 1) AS CLIENTS_ACTIVES,
  (SELECT COUNT(*) FROM TB_BOOKINGS WHERE BOOKING_STATUS = 'CONFIRMADO') AS CONFIRMED_BOOKINGS,
  (SELECT SUM(TOTAL_PRICE) FROM TB_BOOKINGS WHERE BOOKING_STATUS = 'CONFIRMADO') AS TOTAL_REVENUE,
  (SELECT AVG(RATING) FROM TB_REVIEWS) AS AVERAGE_RATING,
  (SELECT COUNT(*) FROM TB_PACKAGES WHERE AVAILABLE = 1) AS AVAILABLE_PACKAGES;

GO

-- Faturamento mensal
SELECT 
  YEAR(BOOKING_DATE) AS YEAR,
  MONTH(BOOKING_DATE) AS MONTH,
  COUNT(ID) AS BOOKING_COUNT,
  SUM(TOTAL_PRICE) AS REVENUE
FROM TB_BOOKINGS
WHERE BOOKING_STATUS = 'CONFIRMADO'
GROUP BY YEAR(BOOKING_DATE), MONTH(BOOKING_DATE)
ORDER BY YEAR, MONTH;

-- Destinos mais populares
SELECT P.DESTINATION, COUNT(R.ID) AS BOOKINGS,
       SUM(R.TOTAL_PRICE) AS REVENUE
FROM TB_PACKAGES P
JOIN TB_BOOKINGS R ON P.ID = R.PACKAGE_ID
WHERE R.BOOKING_STATUS = 'CONFIRMADO'
GROUP BY P.DESTINATION
ORDER BY BOOKINGS DESC;
