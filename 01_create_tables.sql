IF NOT EXISTS(SELECT * FROM sys.databases WHERE name = 'DB_VIAJAVA')
CREATE DATABASE DB_VIAJAVA
GO

USE DB_VIAJAVA
GO

IF NOT EXISTS(SELECT * FROM sys.tables WHERE name = 'TB_USERS')
BEGIN
CREATE TABLE TB_USERS 
(
  ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  NAME VARCHAR(100) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL UNIQUE,
  PASSWORD VARCHAR(150) NOT NULL,
  PHONE VARCHAR(20) NOT NULL,
  BIRTHDATE DATETIME NOT NULL,
  IMAGE_URL VARCHAR(255),
  ACTIVE BIT NOT NULL DEFAULT 1,
  CREATED_AT DATETIME DEFAULT GETDATE(),

  CHECK(LEN(NAME) >= 3),
  CHECK(LEN(PASSWORD) > 5),
  CHECK (DATEDIFF(YEAR, BIRTHDATE, GETDATE()) - 
       CASE 
         WHEN (MONTH(GETDATE()) < MONTH(BIRTHDATE)) 
              OR (MONTH(GETDATE()) = MONTH(BIRTHDATE) AND DAY(GETDATE()) < DAY(BIRTHDATE)) 
         THEN 1 ELSE 0 END >= 18)
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'TB_DOCUMENTS')
BEGIN
CREATE TABLE TB_DOCUMENTS 
(
  ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  DOCUMENT_NUMBER VARCHAR(20),
  USER_ID UNIQUEIDENTIFIER NOT NULL,
  DOCUMENT_TYPE VARCHAR(30) NOT NULL,
  FOREIGN KEY (USER_ID) REFERENCES TB_USERS(ID)
  ON DELETE CASCADE,

  CHECK(DOCUMENT_TYPE = 'CPF' OR DOCUMENT_TYPE = 'PASSPORT')
)
END	
GO

IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'TB_ROLES')
BEGIN
CREATE TABLE TB_ROLES 
(
  ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  USER_ID UNIQUEIDENTIFIER NOT NULL UNIQUE,
  ROLE VARCHAR(50) NOT NULL DEFAULT 'CLIENT',
  FOREIGN KEY (USER_ID) REFERENCES TB_USERS(ID)
  ON DELETE CASCADE,

  CHECK(UPPER(ROLE) = 'CLIENT' OR UPPER(ROLE)  = 'ADMIN')
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'TB_PACKAGES')
BEGIN
CREATE TABLE TB_PACKAGES 
(
  ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  TITLE VARCHAR(100) NOT NULL,
  SOURCE VARCHAR(100) NOT NULL,
  DESTINATION VARCHAR(100) NOT NULL,
  DESCRIPTION TEXT NOT NULL,
  IMAGE_URL VARCHAR(255),
  PRICE DECIMAL(10,2) NOT NULL,
  TRAVELER_LIMIT INT NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE NOT NULL,
  AVAILABLE BIT DEFAULT 1,

  CHECK(PRICE > 0),
  CHECK(TRAVELER_LIMIT > 0),
  CHECK(END_DATE > START_DATE)
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'TB_BOOKINGS')
BEGIN
CREATE TABLE TB_BOOKINGS 
(
  ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
  USER_ID UNIQUEIDENTIFIER NOT NULL,
  PACKAGE_ID UNIQUEIDENTIFIER NOT NULL,
  TOTAL_PRICE DECIMAL(10,2) NOT NULL,
  ORDER_NUMBER VARCHAR(200),
  BOOKING_DATE DATETIME DEFAULT GETDATE(),
  TRAVEL_DATE DATE NOT NULL,
  BOOKING_STATUS VARCHAR(50) DEFAULT 'PENDING',

  FOREIGN KEY (USER_ID) REFERENCES TB_USERS(ID)
  ON DELETE CASCADE,
  FOREIGN KEY (PACKAGE_ID) REFERENCES TB_PACKAGES(ID)
  ON DELETE CASCADE,

  CHECK(TOTAL_PRICE > 0),
  CHECK(TRAVEL_DATE > BOOKING_DATE),
  CHECK(UPPER(BOOKING_STATUS) IN ('PENDING', 'CONFIRMED', 'REJECTED', 'CANCELLED'))
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'TB_PAYMENTS')
BEGIN
CREATE TABLE TB_PAYMENTS 
(
  ID UNIQUEIDENTIFIER DEFAULT NEWID() PRIMARY KEY,
  BOOKING_ID UNIQUEIDENTIFIER NOT NULL, 
  METHOD VARCHAR(50) NOT NULL,
  AMOUNT DECIMAL(10,2) NOT NULL,
  PAYMENT_DATE DATETIME NOT NULL,
  PAYMENT_STATUS VARCHAR(50) NOT NULL DEFAULT 'PENDING',

  FOREIGN KEY (BOOKING_ID) REFERENCES TB_BOOKINGS(ID)
  ON DELETE CASCADE,

  CHECK(UPPER(METHOD) IN ('PIX', 'DEBIT', 'CREDIT', 'BOLETO', 'ACCOUNT_MONEY', 'OTHER')),
  CHECK(AMOUNT > 0),
  CHECK(UPPER(PAYMENT_STATUS) IN (
    'PENDING',
    'APPROVED',
    'AUTHORIZED',
    'IN_PROCESS',
    'IN_MEDIATION',
    'REJECTED',
    'CANCELLED',
    'REFUNDED',
    'CHARGED_BACK',
    'UNKNOWN'
  ))
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'TB_TRAVELERS')
BEGIN
    CREATE TABLE dbo.TB_TRAVELERS
    (
        ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
        BOOKING_ID UNIQUEIDENTIFIER NOT NULL,
        NAME VARCHAR(100) NOT NULL,
        DOCUMENT_NUMBER VARCHAR(11) NOT NULL,
        BIRTHDATE DATE NOT NULL,  

        CONSTRAINT PK_TB_TRAVELERS PRIMARY KEY (ID),
        CONSTRAINT FK_TB_TRAVELERS_BOOKINGS FOREIGN KEY (BOOKING_ID) 
            REFERENCES dbo.TB_BOOKINGS(ID)
            ON DELETE CASCADE, 

        CONSTRAINT CHK_TB_TRAVELERS_NAME_LENGTH CHECK (LEN(NAME) BETWEEN 5 AND 100),
        CONSTRAINT CHK_TB_TRAVELERS_DOC_NUMBER_LENGTH CHECK (LEN(DOCUMENT_NUMBER) IN (8, 11))
    );
END
GO

IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'TB_REVIEWS')
BEGIN
CREATE TABLE TB_REVIEWS 
(
  ID UNIQUEIDENTIFIER DEFAULT NEWID() PRIMARY KEY,
  BOOKING_ID UNIQUEIDENTIFIER NOT NULL,
  RATING INT,
  COMMENT TEXT,
  REVIEW_DATE DATETIME DEFAULT GETDATE(),
  REMOVED BIT DEFAULT 0,
  FOREIGN KEY (BOOKING_ID) REFERENCES TB_BOOKINGS(ID)
  ON DELETE CASCADE,

  CHECK(RATING >= 0 AND RATING <= 5)
)
END
GO
